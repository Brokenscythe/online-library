generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model users {
    id             Int      @id @default(autoincrement())
    username       String
    fullname       String
    email          String
    password       String
    JMBG           String
    remember_token String?
    photo          String?
    createdAt      DateTime @default(now())
    updatedAt      DateTime @updatedAt
}

model authors {
    id           Int            @id @default(autoincrement())
    name         String
    book_authors book_authors[]
}

model categories {
    id              Int               @id @default(autoincrement())
    name            String
    book_categories book_categories[]
}

model books {
    id      Int    @id @default(autoincrement())
    title   String
    summary String
    year    String

    bindings  bindings @relation(fields: [bindingId], references: [id])
    bindingId Int

    formats  formats? @relation(fields: [formatId], references: [id])
    formatId Int?

    languages  languages @relation(fields: [languageId], references: [id])
    languageId Int

    publishers  publishers @relation(fields: [publisherId], references: [id])
    publisherId Int

    book_authors    book_authors[]
    book_categories book_categories[]
    covers          covers[]
}

model book_categories {
    id Int @id @default(autoincrement())

    book   books @relation(fields: [bookId], references: [id])
    bookId Int

    categorie    categories @relation(fields: [cathegorieId], references: [id])
    cathegorieId Int
}

model book_authors {
    id Int @id @default(autoincrement())

    book   books @relation(fields: [bookId], references: [id])
    bookId Int

    author   authors @relation(fields: [authorId], references: [id])
    authorId Int
}

model covers {
    id  Int    @id @default(autoincrement())
    url String

    book    books @relation(fields: [booksId], references: [id])
    booksId Int
}

model bindings {
    id   Int    @id @default(autoincrement())
    name String

    book books[]
}

model formats {
    id   Int    @id @default(autoincrement())
    name String

    book books[]
}

model languages {
    id   Int    @id @default(autoincrement())
    name String

    book books[]
}

model publishers {
    id   Int    @id @default(autoincrement())
    name String

    book books[]
}
